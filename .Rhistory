# model_undo_nonterminal1 = glm(firstUndo ~  1 + leftover_new*N_more + budget_change_new*N_more + within_reach_change_new*N_more,
# data = data_df, family = binomial(link="logit"))
#
# model_undo_nonterminal2 = glm(firstUndo ~  1 + currNumCities_new*N_more + budget_change_new*N_more + within_reach_change_new*N_more,
# data = data_df, family = binomial(link="logit"))
data_df = undo_data[(undo_data$N_more>0),]
print(cor.test(data_df$currNumCities, data_df$leftover_new))
model_undo_nonterminal0 = glm(firstUndo ~  1 + leftover*N_more + currNumCities*N_more + budget_change + within_reach_change,
data = data_df, family = binomial(link="logit"))
summary(model_undo_nonterminal0)
# model_undo_nonterminal1 = glm(firstUndo ~  1 + leftover_new*N_more + budget_change_new*N_more + within_reach_change_new*N_more,
# data = data_df, family = binomial(link="logit"))
#
# model_undo_nonterminal2 = glm(firstUndo ~  1 + currNumCities_new*N_more + budget_change_new*N_more + within_reach_change_new*N_more,
# data = data_df, family = binomial(link="logit"))
model_error = glm(severityOfErrors ~  1  + budget_change + within_reach_change,
data = error_data[error_data$checkEnd==0,], family = "poisson")
summary(model_error)
simulationOutput <- simulateResiduals(fittedModel = model_error, n = 1000, plot = F)
plot(simulationOutput)
data_df = undo_data#[(undo_data$N_more>0),]
print(cor.test(data_df$currNumCities, data_df$leftover_new))
model_undo_nonterminal0 = glm(firstUndo ~  1 + leftover*N_more + currNumCities*N_more + budget_change + within_reach_change,
data = data_df, family = binomial(link="logit"))
summary(model_undo_nonterminal0)
# model_undo_nonterminal1 = glm(firstUndo ~  1 + leftover_new*N_more + budget_change_new*N_more + within_reach_change_new*N_more,
# data = data_df, family = binomial(link="logit"))
#
# model_undo_nonterminal2 = glm(firstUndo ~  1 + currNumCities_new*N_more + budget_change_new*N_more + within_reach_change_new*N_more,
# data = data_df, family = binomial(link="logit"))
data_df = undo_data#[(undo_data$N_more>0),]
print(cor.test(data_df$currNumCities, data_df$leftover_new))
model_undo_nonterminal0 = glm(firstUndo ~  1 + leftover*N_more + currNumCities*N_more + budget_change*N_more + within_reach_change*N_more,
data = data_df, family = binomial(link="logit"))
summary(model_undo_nonterminal0)
# model_undo_nonterminal1 = glm(firstUndo ~  1 + leftover_new*N_more + budget_change_new*N_more + within_reach_change_new*N_more,
# data = data_df, family = binomial(link="logit"))
#
# model_undo_nonterminal2 = glm(firstUndo ~  1 + currNumCities_new*N_more + budget_change_new*N_more + within_reach_change_new*N_more,
# data = data_df, family = binomial(link="logit"))
data_df = undo_data#[(undo_data$N_more>0),]
print(cor.test(data_df$currNumCities, data_df$leftover_new))
model_undo_nonterminal0 = glm(firstUndo ~  1 + leftover*N_more + currNumCities*N_more + budget_change + within_reach_change,
data = data_df, family = binomial(link="logit"))
summary(model_undo_nonterminal0)
# model_undo_nonterminal1 = glm(firstUndo ~  1 + leftover_new*N_more + budget_change_new*N_more + within_reach_change_new*N_more,
# data = data_df, family = binomial(link="logit"))
#
# model_undo_nonterminal2 = glm(firstUndo ~  1 + currNumCities_new*N_more + budget_change_new*N_more + within_reach_change_new*N_more,
# data = data_df, family = binomial(link="logit"))
data_df = undo_data[(undo_data$N_more>0),]
print(cor.test(data_df$currNumCities, data_df$leftover_new))
model_undo_nonterminal0 = glm(firstUndo ~  1 + leftover*N_more + currNumCities*N_more + budget_change + within_reach_change,
data = data_df, family = binomial(link="logit"))
summary(model_undo_nonterminal0)
# model_undo_nonterminal1 = glm(firstUndo ~  1 + leftover_new*N_more + budget_change_new*N_more + within_reach_change_new*N_more,
# data = data_df, family = binomial(link="logit"))
#
# model_undo_nonterminal2 = glm(firstUndo ~  1 + currNumCities_new*N_more + budget_change_new*N_more + within_reach_change_new*N_more,
# data = data_df, family = binomial(link="logit"))
rm(list=ls())
knitr::opts_chunk$set(echo = FALSE)
library(lme4)
library(lmerTest)
library(DHARMa)
library(rcompanion)
library(dplyr)
#library(glmmTMB)
#library(cAIC4)
# library(BayesFactor)
pathToFolder <- "/Users/dbao/My_Drive/road_construction/data/2022_online/"
save_folder <- file.path(pathToFolder, 'stat_model/final/')
data_folder <- file.path(pathToFolder, 'R_analysis_data/')
undo_data <- read.csv(file.path(data_folder, "statsdata_undo_data.csv"))
RT_nonterminal <- read.csv(file.path(data_folder, "statsdata_rt.csv"))
RT_nonterminal <- RT_nonterminal %>%
filter(scale(RT) <= 3)
RT_terminal <- read.csv(file.path(data_folder, "statsdata_rt_terminal.csv"))
error_data <- read.csv(file.path(data_folder, "error_data_undo_condition.csv"))
RT_nonterminal <- RT_nonterminal %>%
filter(scale(RT)[] <= 3)
View(RT_nonterminal)
model_RT <- lmerTest::lmer(RT_log ~  1 + cumulative_error + undo + (1 |subjects) + (1|puzzleID),
data = RT_nonterminal)
simulationOutput <- simulateResiduals(fittedModel = model_RT, n = 1000, plot = F) #, re.form = NULL
plot(simulationOutput)
summary(model_RT)
model_RT <- lmerTest::lmer(RT_log ~  1 + cumulative_error + undo + (1 |subjects) + (1|puzzleID),
data = RT_nonterminal[RT_nonterminal$undo==1,])
simulationOutput <- simulateResiduals(fittedModel = model_RT, n = 1000, plot = F) #, re.form = NULL
plot(simulationOutput)
summary(model_RT)
model_RT <- lmerTest::lmer(RT_log ~  1 + cumulative_error + (1 |subjects) + (1|puzzleID),
data = RT_nonterminal[RT_nonterminal$undo==1,])
simulationOutput <- simulateResiduals(fittedModel = model_RT, n = 1000, plot = F) #, re.form = NULL
plot(simulationOutput)
summary(model_RT)
model_RT <- lme4::glmer(RT ~  1 + cumulative_error + (1 |subjects) + (1|puzzleID),
data = RT_nonterminal[RT_nonterminal$undo==1,], family="Gamma")
simulationOutput <- simulateResiduals(fittedModel = model_RT, n = 1000, plot = F) #, re.form = NULL
model_RT <- lmerTest::lmer(RT_log ~  1 + cumulative_error + (1 +cumulative_error|subjects) + (1+cumulative_error|puzzleID),
data = RT_nonterminal[RT_nonterminal$undo==1,])
simulationOutput <- simulateResiduals(fittedModel = model_RT, n = 1000, plot = F) #, re.form = NULL
plot(simulationOutput)
summary(model_RT)
model_RT <- lmerTest::lmer(RT_log ~  1 + cumulative_error + (1 +cumulative_error|subjects) + (1|puzzleID),
data = RT_nonterminal[RT_nonterminal$undo==1,])
simulationOutput <- simulateResiduals(fittedModel = model_RT, n = 1000, plot = F) #, re.form = NULL
plot(simulationOutput)
summary(model_RT)
RT_nonterminal <- RT_nonterminal %>%
filter(abs(scale(RT))[] <= 3)
model_RT <- lmerTest::lmer(RT_log ~  1 + cumulative_error + (1 +cumulative_error|subjects) + (1|puzzleID),
data = RT_nonterminal[RT_nonterminal$undo==1,])
simulationOutput <- simulateResiduals(fittedModel = model_RT, n = 1000, plot = F) #, re.form = NULL
plot(simulationOutput)
summary(model_RT)
RT_nonterminal <- read.csv(file.path(data_folder, "statsdata_rt.csv"))
RT_nonterminal <- RT_nonterminal %>%
filter(abs(scale(RT))[] <= 3)
model_RT <- lmerTest::lmer(RT_log ~  1 + cumulative_error + (1 +cumulative_error|subjects) + (1|puzzleID),
data = RT_nonterminal[RT_nonterminal$undo==1,])
simulationOutput <- simulateResiduals(fittedModel = model_RT, n = 1000, plot = F) #, re.form = NULL
plot(simulationOutput)
summary(model_RT)
View(RT_terminal)
View(RT_nonterminal)
model_RT <- lmerTest::lmer(RT_log ~  1 + cumulative_error + N_more + (1 +cumulative_error|subjects) + (1|puzzleID),
data = RT_nonterminal[RT_nonterminal$undo==1,])
simulationOutput <- simulateResiduals(fittedModel = model_RT, n = 1000, plot = F) #, re.form = NULL
plot(simulationOutput)
summary(model_RT)
model_RT <- lmerTest::lmer(RT_log ~  1 + cumulative_error + N_more + (1 |subjects) + (1|puzzleID),
data = RT_nonterminal[RT_nonterminal$undo==1,])
simulationOutput <- simulateResiduals(fittedModel = model_RT, n = 1000, plot = F) #, re.form = NULL
plot(simulationOutput)
summary(model_RT)
model_RT <- lmerTest::lmer(RT_log ~  1 + cumulative_error * N_more + (1 |subjects) + (1|puzzleID),
data = RT_nonterminal[RT_nonterminal$undo==1,])
simulationOutput <- simulateResiduals(fittedModel = model_RT, n = 1000, plot = F) #, re.form = NULL
plot(simulationOutput)
summary(model_RT)
model_RT <- lmerTest::lmer(RT_log ~  1 + cumulative_error + (1 |subjects) + (1|puzzleID),
data = RT_nonterminal[RT_nonterminal$undo==1,])
simulationOutput <- simulateResiduals(fittedModel = model_RT, n = 1000, plot = F) #, re.form = NULL
plot(simulationOutput)
summary(model_RT)
View(error_data)
View(model_RT)
View(RT_nonterminal)
model_RT <- lmerTest::lmer(RT_log ~  1 + cumulative_error + severityOfErrors + (1 |subjects) + (1|puzzleID),
data = RT_nonterminal[RT_nonterminal$undo==1,])
simulationOutput <- simulateResiduals(fittedModel = model_RT, n = 1000, plot = F) #, re.form = NULL
plot(simulationOutput)
summary(model_RT)
model_RT <- lmerTest::lmer(RT_log ~  1 + scale(cumulative_error) + severityOfErrors + (1 |subjects) + (1|puzzleID),
data = RT_nonterminal[RT_nonterminal$undo==1,])
simulationOutput <- simulateResiduals(fittedModel = model_RT, n = 1000, plot = F) #, re.form = NULL
plot(simulationOutput)
summary(model_RT)
model_RT <- lmerTest::lmer(RT_log ~  1 + scale(cumulative_error) + scale(severityOfErrors) + (1 |subjects) + (1|puzzleID),
data = RT_nonterminal[RT_nonterminal$undo==1,])
simulationOutput <- simulateResiduals(fittedModel = model_RT, n = 1000, plot = F) #, re.form = NULL
plot(simulationOutput)
summary(model_RT)
model_RT <- lmerTest::lmer(RT_log ~  1 + severityOfErrors + (1 |subjects) + (1|puzzleID),
data = RT_nonterminal[RT_nonterminal$undo==1,])
simulationOutput <- simulateResiduals(fittedModel = model_RT, n = 1000, plot = F) #, re.form = NULL
plot(simulationOutput)
summary(model_RT)
model_RT <- lmerTest::lmer(RT_log ~  1 + cumulative_error + (1 |subjects) + (1|puzzleID),
data = RT_nonterminal[RT_nonterminal$undo==1,])
simulationOutput <- simulateResiduals(fittedModel = model_RT, n = 1000, plot = F) #, re.form = NULL
plot(simulationOutput)
summary(model_RT)
model_RT <- lmerTest::lmer(RT_log ~  1 + severityOfErrors + (1 |subjects) + (1|puzzleID),
data = RT_nonterminal[RT_nonterminal$undo==1,])
simulationOutput <- simulateResiduals(fittedModel = model_RT, n = 1000, plot = F) #, re.form = NULL
plot(simulationOutput)
summary(model_RT)
load(file.path(save_folder, 'model_undo_rt1.RData'))
simulationOutput <- simulateResiduals(fittedModel = model_undo, n = 1000, plot = F) #, re.form = NULL
plot(simulationOutput)
testZeroInflation(simulationOutput)
testQuantiles(simulationOutput)
load(file.path(save_folder, 'model_undo_rt1.RData'))
simulationOutput <- simulateResiduals(fittedModel = model_undo, n = 1000, plot = F) #, re.form = NULL
plot(simulationOutput)
testZeroInflation(simulationOutput)
testQuantiles(simulationOutput)
model_RT <- lmerTest::lmer(RT_log ~  1 + severityOfErrors + undo + (1 |subjects) + (1|puzzleID),
data = RT_nonterminal[RT_nonterminal$N_more!=0,])
simulationOutput <- simulateResiduals(fittedModel = model_RT, n = 1000, plot = F) #, re.form = NULL
plot(simulationOutput)
summary(model_RT)
model_RT <- lmerTest::lmer(RT_log ~  1 + severityOfErrors * undo + (1 |subjects) + (1|puzzleID),
data = RT_nonterminal[RT_nonterminal$N_more!=0,])
simulationOutput <- simulateResiduals(fittedModel = model_RT, n = 1000, plot = F) #, re.form = NULL
plot(simulationOutput)
summary(model_RT)
model_RT <- lmerTest::lmer(
RT_log ~  1 + cumulative_error * firstUndo + (1|subjects) + (1|puzzleID),
data = RT_terminal)
simulationOutput <- simulateResiduals(fittedModel = model_RT, n = 1000, plot = F) #, re.form = NULL
plot(simulationOutput)
summary(model_RT)
View(RT_terminal)
rm(list=ls())
knitr::opts_chunk$set(echo = FALSE)
library(lme4)
library(lmerTest)
library(DHARMa)
library(rcompanion)
library(dplyr)
#library(glmmTMB)
#library(cAIC4)
# library(BayesFactor)
pathToFolder <- "/Users/dbao/My_Drive/road_construction/data/2022_online/"
save_folder <- file.path(pathToFolder, 'stat_model/final/')
data_folder <- file.path(pathToFolder, 'R_analysis_data/')
undo_data <- read.csv(file.path(data_folder, "statsdata_undo_data.csv"))
RT_nonterminal <- read.csv(file.path(data_folder, "statsdata_rt.csv"))
RT_nonterminal <- RT_nonterminal %>%
filter(abs(scale(RT))[] <= 3)
RT_terminal <- read.csv(file.path(data_folder, "statsdata_rt_terminal.csv"))
RT_terminal <- RT_terminal %>%
filter(abs(scale(RT))[] <= 3)
error_data <- read.csv(file.path(data_folder, "error_data_undo_condition.csv"))
model_RT <- lmerTest::lmer(
RT_log ~  1 + cumulative_error * firstUndo + (1|subjects) + (1|puzzleID),
data = RT_terminal)
simulationOutput <- simulateResiduals(fittedModel = model_RT, n = 1000, plot = F) #, re.form = NULL
plot(simulationOutput)
summary(model_RT)
model_RT <- lmerTest::lmer(
RT_log ~  1 + cumulative_error + firstUndo + (1|subjects) + (1|puzzleID),
data = RT_terminal)
simulationOutput <- simulateResiduals(fittedModel = model_RT, n = 1000, plot = F) #, re.form = NULL
plot(simulationOutput)
summary(model_RT)
model_RT <- lmerTest::lmer(RT_log ~  1 + severityOfErrors + undo + (1 |subjects) + (1|puzzleID),
data = RT_nonterminal[RT_nonterminal$N_more!=0,])
simulationOutput <- simulateResiduals(fittedModel = model_RT, n = 1000, plot = F) #, re.form = NULL
plot(simulationOutput)
summary(model_RT)
model_RT <- lmerTest::lmer(RT_log ~  1 + currNumCities+ severityOfErrors + undo + (1 |subjects) + (1|puzzleID),
data = RT_nonterminal[RT_nonterminal$N_more!=0,])
simulationOutput <- simulateResiduals(fittedModel = model_RT, n = 1000, plot = F) #, re.form = NULL
plot(simulationOutput)
summary(model_RT)
model_RT <- lmerTest::lmer(
RT_log ~  1 + + currNumCities + cumulative_error + firstUndo + (1|subjects) + (1|puzzleID),
data = RT_terminal)
simulationOutput <- simulateResiduals(fittedModel = model_RT, n = 1000, plot = F) #, re.form = NULL
plot(simulationOutput)
summary(model_RT)
model_RT <- lmerTest::lmer(
RT_log ~  1 + currNumCities + cumulative_error + firstUndo + (1|subjects) + (1|puzzleID),
data = RT_terminal)
simulationOutput <- simulateResiduals(fittedModel = model_RT, n = 1000, plot = F) #, re.form = NULL
plot(simulationOutput)
summary(model_RT)
model_RT <- lmerTest::lmer(
RT_log ~  1 + cumulative_error + firstUndo + (1|subjects) + (1|puzzleID),
data = RT_terminal)
simulationOutput <- simulateResiduals(fittedModel = model_RT, n = 1000, plot = F) #, re.form = NULL
plot(simulationOutput)
summary(model_RT)
model_undo_mas = lme4::glmer(firstUndo ~  1 + allMAS*checkEnd,
data = undo_data, family = binomial(link="logit"))
model_undo_mas = lme4::glmer(firstUndo ~  1 + allMAS*checkEnd + (1|subjects),
data = undo_data, family = binomial(link="logit"))
summary(model_undo_mas)
model_undo_mas = lme4::glmer(firstUndo ~  1 + allMAS + (1|subjects),
data = undo_data[undo_data$checkEnd==1,], family = binomial(link="logit"))
summary(model_undo_mas)
model_error_allMAS = lmerTest::lmer(cumulative_error ~  1 + allMAS,
data = error_data[error_data$checkEnd==1,], family = poisson)
model_error_allMAS = lme4::glmer(cumulative_error ~  1 + allMAS + (1|subjects),
data = error_data[error_data$checkEnd==1,], family = poisson)
summary(model_error_allMAS)
simulationOutput <- simulateResiduals(fittedModel = model_error_terminal, n = 1000, plot = F)
model_error_allMAS = lme4::glmer(cumulative_error ~  1 + allMAS + (1|subjects),
data = error_data[error_data$checkEnd==1,], family = poisson)
summary(model_error_allMAS)
simulationOutput <- simulateResiduals(fittedModel = model_error_allMAS, n = 1000, plot = F)
plot(simulationOutput)
model_error_allMAS = lmerTest::lmer(cumulative_error ~  1 + allMAS + (1|subjects),
data = error_data[error_data$checkEnd==1,])
summary(model_error_allMAS)
simulationOutput <- simulateResiduals(fittedModel = model_error_allMAS, n = 1000, plot = F)
plot(simulationOutput)
model_error_allMAS = lme4::glmer(cumulative_error ~  1 + allMAS + (1|subjects),
data = error_data[error_data$checkEnd==1,], family = poisson)
summary(model_error_allMAS)
simulationOutput <- simulateResiduals(fittedModel = model_error_allMAS, n = 1000, plot = F)
plot(simulationOutput)
model_error_allMAS = lme4::glmer(sqrt(cumulative_error) ~  1 + allMAS + (1|subjects),
data = error_data[error_data$checkEnd==1,], family = poisson)
summary(model_error_allMAS)
simulationOutput <- simulateResiduals(fittedModel = model_error_allMAS, n = 1000, plot = F)
plot(simulationOutput)
model_error_allMAS = lme4::glmer(cumulative_error ~  1 + as.factor(allMAS) + (1|subjects),
data = error_data[error_data$checkEnd==1,], family = poisson)
summary(model_error_allMAS)
simulationOutput <- simulateResiduals(fittedModel = model_error_allMAS, n = 1000, plot = F)
plot(simulationOutput)
model_error_allMAS = lme4::glmer(cumulative_error ~  1 + allMAS + (1|subjects),
data = error_data[(error_data$checkEnd==1)&(error_data$allMAS>=7),], family = poisson)
summary(model_error_allMAS)
simulationOutput <- simulateResiduals(fittedModel = model_error_allMAS, n = 1000, plot = F)
plot(simulationOutput)
model_error_allMAS = lme4::glmer(cumulative_error ~  1 + allMAS + (allMAS|subjects),
data = error_data[(error_data$checkEnd==1)&(error_data$allMAS>=7),], family = poisson)
summary(model_error_allMAS)
simulationOutput <- simulateResiduals(fittedModel = model_error_allMAS, n = 1000, plot = F)
plot(simulationOutput)
model_error_allMAS = lme4::glmer(cumulative_error ~  1 + allMAS + (1|subjects),
data = error_data[(error_data$checkEnd==1)&(error_data$allMAS>=7),], family = poisson)
summary(model_error_allMAS)
simulationOutput <- simulateResiduals(fittedModel = model_error_allMAS, n = 1000, plot = F)
plot(simulationOutput)
model_undo_mas = lme4::glmer(firstUndo ~  1 + allMAS + (1|subjects),
data = undo_data[(undo_data$checkEnd==1)&(undo_data$allMAS>=7),], family = binomial(link="logit"))
summary(model_undo_mas)
model_RT <- lmerTest::lmer(
RT_log ~  1 + allMAS + (1|subjects) + (1|puzzleID),
data = RT_terminal[RT_terminal$firstUndo==1,])
rm(list=ls())
knitr::opts_chunk$set(echo = FALSE)
library(lme4)
library(lmerTest)
library(DHARMa)
library(rcompanion)
library(dplyr)
#library(glmmTMB)
#library(cAIC4)
# library(BayesFactor)
pathToFolder <- "/Users/dbao/My_Drive/road_construction/data/2022_online/"
save_folder <- file.path(pathToFolder, 'stat_model/final/')
data_folder <- file.path(pathToFolder, 'R_analysis_data/')
undo_data <- read.csv(file.path(data_folder, "statsdata_undo_data.csv"))
RT_nonterminal <- read.csv(file.path(data_folder, "statsdata_rt.csv"))
RT_nonterminal <- RT_nonterminal %>%
filter(abs(scale(RT))[] <= 3)
RT_terminal <- read.csv(file.path(data_folder, "statsdata_rt_terminal.csv"))
RT_terminal <- RT_terminal %>%
filter(abs(scale(RT))[] <= 3)
error_data <- read.csv(file.path(data_folder, "error_data_undo_condition.csv"))
model_RT <- lmerTest::lmer(
RT_log ~  1 + allMAS + (1|subjects) + (1|puzzleID),
data = RT_terminal[RT_terminal$firstUndo==1,])
data = RT_terminal[RT_terminal$firstUndo==1,]
View(RT_terminal)
model_RT <- lmerTest::lmer(
RT_log ~  1 + allMAS + (1|subjects) + (1|puzzleID),
data = RT_terminal[RT_terminal$firstUndo=="undo",])
simulationOutput <- simulateResiduals(fittedModel = model_RT, n = 1000, plot = F) #, re.form = NULL
plot(simulationOutput)
summary(model_RT)
rm(list=ls())
knitr::opts_chunk$set(echo = FALSE)
library(lme4)
library(lmerTest)
library(DHARMa)
library(rcompanion)
library(dplyr)
#library(glmmTMB)
#library(cAIC4)
# library(BayesFactor)
pathToFolder <- "/Users/dbao/My_Drive/road_construction/data/2022_online/"
save_folder <- file.path(pathToFolder, 'stat_model/final/')
data_folder <- file.path(pathToFolder, 'R_analysis_data/')
undo_data <- read.csv(file.path(data_folder, "statsdata_undo_data.csv"))
undo_data["RT1_log"] = log(undo_data["RT1"]+1)
RT_nonterminal <- read.csv(file.path(data_folder, "statsdata_rt.csv"))
RT_nonterminal <- RT_nonterminal %>%
filter(abs(scale(RT))[] <= 3)
RT_terminal <- read.csv(file.path(data_folder, "statsdata_rt_terminal.csv"))
RT_terminal <- RT_terminal %>%
filter(abs(scale(RT))[] <= 3)
error_data <- read.csv(file.path(data_folder, "error_data_undo_condition.csv"))
data_df = undo_data[(undo_data$N_more>0),]
print(cor.test(data_df$currNumCities, data_df$leftover_new))
model_undo_nonterminal0 = glm(firstUndo ~  1 + RT1_log*N_more + leftover*N_more + currNumCities*N_more + budget_change + within_reach_change,
data = data_df, family = binomial(link="logit"))
summary(model_undo_nonterminal0)
# model_undo_nonterminal1 = glm(firstUndo ~  1 + leftover_new*N_more + budget_change_new*N_more + within_reach_change_new*N_more,
# data = data_df, family = binomial(link="logit"))
#
# model_undo_nonterminal2 = glm(firstUndo ~  1 + currNumCities_new*N_more + budget_change_new*N_more + within_reach_change_new*N_more,
# data = data_df, family = binomial(link="logit"))
simulationOutput <- simulateResiduals(fittedModel = model_undo_nonterminal2, n = 1000, plot = F, re.form = NULL) #
simulationOutput <- simulateResiduals(fittedModel = model_undo_nonterminal0, n = 1000, plot = F, re.form = NULL) #
plot(simulationOutput)
data_df <- undo_data[(undo_data$N_more == 0),]
model_undo_terminal1 = glm(firstUndo ~  1 + RT1_log + currNumCities + leftover + budget_change+ within_reach_change ,
data = data_df, family = binomial(link="logit"))
summary(model_undo_terminal1)
rm(list=ls())
knitr::opts_chunk$set(echo = FALSE)
library(lme4)
library(lmerTest)
library(DHARMa)
library(rcompanion)
library(dplyr)
#library(glmmTMB)
#library(cAIC4)
# library(BayesFactor)
pathToFolder <- "/Users/dbao/My_Drive/road_construction/data/2022_online/"
save_folder <- file.path(pathToFolder, 'stat_model/final/')
data_folder <- file.path(pathToFolder, 'R_analysis_data/')
undo_data <- read.csv(file.path(data_folder, "statsdata_undo_data.csv"))
undo_data["RT1_log"] = log(undo_data["RT1"]+1)
RT_nonterminal <- read.csv(file.path(data_folder, "statsdata_rt.csv"))
RT_nonterminal <- RT_nonterminal %>%
filter(abs(scale(RT))[] <= 3)
RT_terminal <- read.csv(file.path(data_folder, "statsdata_rt_terminal.csv"))
RT_terminal <- RT_terminal %>%
filter(abs(scale(RT))[] <= 3)
error_data <- read.csv(file.path(data_folder, "error_data_undo_condition.csv"))
error_data["RT1_log"] = log(error_data["RT1"]+1)
model_error = glm(severityOfErrors ~  1  + RT1_log + budget_change + within_reach_change,
data = error_data[error_data$checkEnd==0,], family = "poisson")
summary(model_error)
simulationOutput <- simulateResiduals(fittedModel = model_error, n = 1000, plot = F)
plot(simulationOutput)
model_error_terminal = glm(cumulative_error ~  1 + RT1_log + currNumCities + leftover + budget_change + within_reach_change,
data = error_data[error_data$checkEnd==1,], family = poisson)
summary(model_error_terminal)
simulationOutput <- simulateResiduals(fittedModel = model_error_terminal, n = 1000, plot = F)
plot(simulationOutput)
rm(list=ls())
knitr::opts_chunk$set(echo = FALSE)
library(lme4)
library(lmerTest)
library(DHARMa)
library(rcompanion)
library(dplyr)
#library(glmmTMB)
#library(cAIC4)
# library(BayesFactor)
pathToFolder <- "/Users/dbao/My_Drive/road_construction/data/2022_online/"
save_folder <- file.path(pathToFolder, 'stat_model/final/')
data_folder <- file.path(pathToFolder, 'R_analysis_data/')
undo_data <- read.csv(file.path(data_folder, "statsdata_undo_data.csv"))
undo_data["RT1_log"] = log(undo_data["RT1"]+1)
RT_nonterminal <- read.csv(file.path(data_folder, "statsdata_rt.csv"))
RT_nonterminal <- RT_nonterminal %>%
filter(abs(scale(RT))[] <= 3)
RT_terminal <- read.csv(file.path(data_folder, "statsdata_rt_terminal.csv"))
RT_terminal <- RT_terminal %>%
filter(abs(scale(RT))[] <= 3)
error_data <- read.csv(file.path(data_folder, "error_data_undo_condition.csv"))
error_data["RT1_log"] = log(error_data["RT1"]+1)
data_df = undo_data[(undo_data$N_more>0),]
print(cor.test(data_df$currNumCities, data_df$leftover_new))
# model_undo_nonterminal0 = glm(firstUndo ~  1 + RT1_log*N_more + leftover*N_more + currNumCities*N_more + budget_change + within_reach_change,
# data = data_df, family = binomial(link="logit"))
# summary(model_undo_nonterminal0)
model_undo_nonterminal0 = lme4::glmer(firstUndo ~  1 + leftover*N_more + currNumCities*N_more + budget_change + within_reach_change + (1 |subjects) + (1|puzzleID),
data = data_df, family = binomial(link="logit"))
# model_undo_nonterminal1 = glm(firstUndo ~  1 + leftover_new*N_more + budget_change_new*N_more + within_reach_change_new*N_more,
# data = data_df, family = binomial(link="logit"))
#
# model_undo_nonterminal2 = glm(firstUndo ~  1 + currNumCities_new*N_more + budget_change_new*N_more + within_reach_change_new*N_more,
# data = data_df, family = binomial(link="logit"))
data_df = undo_data[(undo_data$N_more>0),]
model_undo_nonterminal0 = lme4::glmer(firstUndo ~  1 + leftover*N_more + currNumCities*N_more + budget_change + within_reach_change + (1 |subjects) + (1|puzzleID),
data = data_df, family = binomial(link="logit"))
model_undo_nonterminal0 = lme4::glmer(firstUndo ~  1 + leftover*N_more + currNumCities*N_more + budget_change + within_reach_change + (1 |subjects) + (1|puzzleID),
data = data_df, family = binomial(link="logit"))
model_undo_nonterminal0 = lme4::glmer(firstUndo ~  1 + leftover_new*N_more + currNumCities*N_more + budget_change_new + within_reach_change_new + (1 |subjects) + (1|puzzleID),
data = data_df, family = binomial(link="logit"))
summary(model_undo_nonterminal0)
data_df = undo_data[(undo_data$N_more>0),]
rm(list=ls())
knitr::opts_chunk$set(echo = FALSE)
library(lme4)
library(lmerTest)
library(DHARMa)
library(rcompanion)
library(dplyr)
#library(glmmTMB)
#library(cAIC4)
# library(BayesFactor)
pathToFolder <- "/Users/dbao/My_Drive/road_construction/data/2022_online/"
save_folder <- file.path(pathToFolder, 'stat_model/final/')
data_folder <- file.path(pathToFolder, 'R_analysis_data/')
undo_data <- read.csv(file.path(data_folder, "statsdata_undo_data.csv"))
undo_data["RT1_log"] = log(undo_data["RT1"]+1)
RT_nonterminal <- read.csv(file.path(data_folder, "statsdata_rt.csv"))
RT_nonterminal <- RT_nonterminal %>%
filter(abs(scale(RT))[] <= 3)
RT_terminal <- read.csv(file.path(data_folder, "statsdata_rt_terminal.csv"))
RT_terminal <- RT_terminal %>%
filter(abs(scale(RT))[] <= 3)
error_data <- read.csv(file.path(data_folder, "error_data_undo_condition.csv"))
error_data["RT1_log"] = log(error_data["RT1"]+1)
data_df = undo_data[(undo_data$N_more>0),]
# print(cor.test(data_df$currNumCities, data_df$leftover_new))
model_undo_nonterminal0 = glm(firstUndo ~  1 + RT1_log + leftover*N_more + currNumCities*N_more + budget_change + within_reach_change,
data = data_df, family = binomial(link="logit"))
summary(model_undo_nonterminal0)
# model_undo_nonterminal0 = lme4::glmer(firstUndo ~  1 + leftover_new*N_more + currNumCities*N_more + budget_change_new + within_reach_change_new + (1 |subjects) + (1|puzzleID),
# data = data_df, family = binomial(link="logit"))
# summary(model_undo_nonterminal0)
# model_undo_nonterminal1 = glm(firstUndo ~  1 + leftover_new*N_more + budget_change_new*N_more + within_reach_change_new*N_more,
# data = data_df, family = binomial(link="logit"))
#
# model_undo_nonterminal2 = glm(firstUndo ~  1 + currNumCities_new*N_more + budget_change_new*N_more + within_reach_change_new*N_more,
# data = data_df, family = binomial(link="logit"))
